}
}
secCharPostCod <- as.numeric(substr(modelingData[,4],2,2)
secCharPostCod <- substr(modelingData[,4],2,2)
secCharPostCod <- substr(modelingData,2,2)
secCharPostCod <- substr(modelingData[,4],2,2)
secCharPostCod <- as.numeric(substr(modelingData[,4],2,2))
a <- if(secCharPostCod==0){
"R"
}
a <- {if(secCharPostCod == 0){
"R"
}
else "U"
}
a <- {if(secCharPostCod[] == 0){
"R"
}
else "U"
}
a <- {if(secCharPostCod[1,] == 0){
"R"
}
else "U"
}
a <- {if(secCharPostCod[,1] == 0){
"R"
}
else "U"
}
secCharPostCod <- if(as.numeric(substr(modelingData[,4],2,2)) == 0){
"R"
}
secCharPostCod <- as.numeric(substr(modelingData[,4],2,2))
secCharPostCod <- ifelse(as.numeric(substr(modelingData[,4],2,2)) == 0, "R","U")
modelingDataModif <- cbind(modelingData,Province)
modelingDataModif <- cbind(modelingDataModif,secCharPostCod)
View(modelingDataModif)
View(modelingDataModif)
Age <- 2020-modelingData[,6]
modelingDataModif <- cbind(modelingDataModif,Age)
View(modelingDataNewColumn)
View(modelingDataModif)
View(modelingDataModif)
Age_debut_inval <- modelingData[,1]-modelingData[,6]
modelingDataModif <- cbind(modelingDataModif,Age)
modelingDataModif <- cbind(modelingDataModif,Age_debut_inval)
View(modelingDataModif)
View(modelingDataNewColumn)
View(modelingDataNewColumn)
Saison_debut_inval <- ifelse(modelingData[,2]>6,1,0)
Saison_debut_inval <- ifelse(modelingData[,2]>0 & modelingData[,2]<=3,1,0)
Saison_debut_inval <- ifelse(modelingData[,2]>0 & modelingData[,2]<=3,"H",
ifesle(modelingData[,2]>3 & modelingData[,2]<=6,"P",
ifelse(modelingData[,2]>6 & modelingData[,2]<=9,"E","A")))
Saison_debut_inval <- ifelse(modelingData[,2]>0 & modelingData[,2]<=3,"H","AUTRE")
Saison_debut_inval <- ifelse(modelingData[,2]>0 & modelingData[,2]<=3,"H",
ifesle(modelingData[,2]>3 & modelingData[,2]<=6,"P",
ifelse(modelingData[,2]>6 & modelingData[,2]<=9,"E","A")))
seasonTable <- data.frame("Numero mois"=c(1:12),"Saison"=c(rep.int("H",3),rep.int("P",3),rep.int("E",3),rep.int("A",3)))
View(seasonTable)
Saison_debut_inval <- seasonTable[match(modelingData[,2],seasonTable[1,]),2]
View(seasonTable)
match(modelingData[,2],seasonTable[1,])
modelingData[,2]
seasonTable[,1]
match(modelingData[,2],seasonTable[,1])
Saison_debut_inval <- seasonTable[match(modelingData[,2],seasonTable[,1]),2]
Saison_debut_inval
modelingDataModif <- cbind(modelingDataModif,Saison_debut_inval)
View(modelingDataModif)
View(modelingDataModif)
seasonTable <- data.frame("Numero mois"=c(1:12),"Saison"=c(rep.int("Hiver",3),rep.int("Printemps",3),rep.int("Ete",3),rep.int("Automne",3)))
Saison_debut_inval <- seasonTable[match(modelingData[,2],seasonTable[,1]),2]
modelingDataModif <- cbind(modelingDataModif,Saison_debut_inval)
View(modelingDataNewColumn)
View(modelingDataNewColumn)
View(modelingDataModif)
View(modelingDataModif)
View(modelingDataModif)
View(modelingDataModif)
hist(modelingData[,3])
quantile(modelingData[,3])
hist(modelingData[,3])
Delai_Attente_Group <- {if(modelingData[,3]<75){
"Petit"
}
if(modelingData[,3]>=75 & modelingData[,3]<150){
"Moyen"
}
"Grand"
}
# Ajout de l'information Groupe du délai d'attente à modelingData
i=1
Delai_Attente_Group <- for(i in length(modeling[,3])){
if(modelingData[i,3]<75){
"Petit"
}
if(modelingData[i,3]>=75 & modelingData[i,3]<150){
"Moyen"
}
"Grand"
i+1
}
Delai_Attente_Group <- for(i in length(modelingData[,3])){
if(modelingData[i,3]<75){
"Petit"
}
if(modelingData[i,3]>=75 & modelingData[i,3]<150){
"Moyen"
}
"Grand"
i+1
}
Delai_Attente_Group <- for(i in length(modelingData[,3])){
if(modelingData[i,3]<75){
Delai_Attente_Group[i] <- "Petit"
}
if(modelingData[i,3]>=75 & modelingData[i,3]<150){
Delai_Attente_Group[i] <- "Moyen"
}
Delai_Attente_Group[i] <- "Grand"
i+1
}
Delai_Attente_Group <- for(i in length(modelingData[,3])){
if(modelingData[i,3]<75){
Delai_Attente_Group[[]] <- "Petit"
}
if(modelingData[i,3]>=75 & modelingData[i,3]<150){
Delai_Attente_Group[[]] <- "Moyen"
}
Delai_Attente_Group[[]] <- "Grand"
i+1
}
# Ajout de l'information Groupe du délai d'attente à modelingData
i=1
Delai_Attente_Group <- for(i in length(modelingData[,3])){
if(modelingData[i,3]<75){
Delai_Attente_Group[[]] <- "Petit"
}
if(modelingData[i,3]>=75 & modelingData[i,3]<150){
Delai_Attente_Group[[]] <- "Moyen"
}
Delai_Attente_Group[[]] <- "Grand"
i+1
}
modelingData[1,3]
i <- 0
j <- length(modelingData[,3])
j
i <- i
i <- 1
j <- length(modelingData[,3])
while (i<=j) {
if(modelingData[i,3]<75){
Delai_Attente_Group[i] <- "Petit"
}
if(modelingData[i,3]>=150){
Delai_Attente_Group[i] <- "Grand"
}
else Delai_Attente_Group[i] <- "Moyen"
i+1
}
Delai_Attente_Group
i <- 1
j <- length(modelingData[,3])
while (i<=j) {
if(modelingData[i,3]<75){
Delai_Attente_Group[i] <- "Petit"
}
if(modelingData[i,3]>=150){
Delai_Attente_Group[i] <- "Grand"
}
else Delai_Attente_Group[i] <- "Moyen"
i+1
}
j <- 3
while (i<=j) {
if(modelingData[i,3]<75){
Delai_Attente_Group[i] <- "Petit"
}
if(modelingData[i,3]>=150){
Delai_Attente_Group[i] <- "Grand"
}
else Delai_Attente_Group[i] <- "Moyen"
i+1
}
i <- 1
j <- 3
while (i<=j) {
if(modelingData[i,3]<75){
Delai_Attente_Group[i] <- "Petit"
}
if(modelingData[i,3]>=150){
Delai_Attente_Group[i] <- "Grand"
}
Delai_Attente_Group[i] <- "Moyen"
i+1
}
Delai_Attente_Group
i <- 1
j <- 3
while (i<=j) {
if(modelingData[i,3]<75){
Delai_Attente_Group[i] <- "Petit"
i+1
}
if(modelingData[i,3]>=150){
Delai_Attente_Group[i] <- "Grand"
i+1
}
Delai_Attente_Group[i] <- "Moyen"
i+1
}
Delai_Attente_Group
modelingData[1,3]
if(modelingData[1,3]<75) "Petit"
if(modelingData[1,3]<75) delai <- "Petit"
delai[i] <- modelingData[,3]
for (i in 1:3) {
delai[i] <- modelingData[i,3]
}
for (i in length(modelingData[,3])) {
delai[i] <- modelingData[i,3]
}
for (i in length(modelingData[,3])) {
delai[i] <- modelingData[i,3]
}
modelingData <- read.csv("MODELING_DATA.csv", header = TRUE, sep =";") ## N'oublie pas de set ton workspace
for (i in length(modelingData[,3])) {
delai[i] <- modelingData[i,3]
}
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in length(modelingData[,3])) {
delai[i] <- modelingData[i,3]
}
for (i in 1:length(modelingData[,3])) {
delai[i] <- modelingData[i,3]
}
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
"Petit"
}
delai[i] <- modelingData[i,3]
}
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
"Petit"
}
delai[i] <- modelingData[i,3]
}
modelingData[5,3]<75
modelingData[5,3]<750
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
delai[i] <- modelingData[i,3]
}
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else
{
delai[i] <- modelingData[i,3]
}
}
for (i in 1:length(modelingData[,3]+1)) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else
{
delai[i] <- modelingData[i,3]
}
}
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else
{
delai[i] <- modelingData[i,3]
}
}
delai <-
if(modelingData[1,3]<75) delai <- "Petit"
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else
{
delai[i] <- modelingData[i,3]
}
}
delai
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
if(modelingData[i,3]>=150){
delai[i] <- "Grand"
}
else
{
delai[i] <- "Moyen"
}
}
delai
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
if(modelingData[i,3]>=150){
delai[i] <- "Grand"
}
else
{
delai[i] <- "Moyen"
}
}
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
if(modelingData[i,3]>=150){
delai[i] <- "Grand"
}
delai[i] <- "Moyen"
}
# Ajout de l'information Groupe du délai d'attente à modelingData
delai <- c()
for (i in 1:length(modelingData[,3])) {
{if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else if(modelingData[i,3]>=150){
delai[i] <- "Grand"
}
else delai[i] <- "Moyen"
}
}
delai
modelingDataModif <- cbind(modelingData,delai)
# Ajout de l'information Groupe du délai d'attente à modelingData
length(modelingData[,3])
modelingData %>% filter_all(any_vars(!is.na(.)))
modelingData[rowSums(is.na(modelingData)) != ncol(modelingData),]
modelingDataModif <- modelingData[rowSums(is.na(modelingData)) != ncol(modelingData),]
View(modelingDataModif)
View(modelingDataModif)
rowSums(is.na(modelingData))
rowSums(is.na(modelingData[6000,]))
modelingDataModif <- modelingData[rowSums(is.na(modelingData)) != ncol(modelingData),]
modelingData <- read.csv("MODELING_DATA.csv", header = TRUE, sep =";") ## N'oublie pas de set ton workspace
modelingDataModif <- modelingData[rowSums(is.na(modelingData)) != ncol(modelingData),]
modelingData[6000,]
View(modelingData)
View(modelingData)
modelingData[6000,1]
modelingData[6000,0]
modelingData[6000,1]
ncol(modelingData)
rowSums(is.na(modelingData)) != ncol(modelingData)
modelingData[rowSums(is.na(modelingData)) != ncol(modelingData),]
modelingDataModif <- modelingData[complete.cases(),]
modelingDataModif <- modelingData[complete.cases(modelingData),]
Prov <- data.frame("1er Charactère"=c("A","B","C","E","G","H","J","K","L","M","N","P","R","S","T","V","X","Y"),
"Province"=c("NL","NS","PE","NB","QC","QC","QC","ON","ON","ON","ON","ON","MB","SK","AB","BC","NU/NT","YT"))
firstCharPostCod <- substr(modelingData[,4],1,1)  ##Sélection du 1er caractère code postal
modelingData <- read.csv("MODELING_DATA.csv", header = TRUE, sep =";")
modelingDataModif <- modelingData[complete.cases(modelingData),] # Élimination des lignes vides
Prov <- data.frame("1er Charactère"=c("A","B","C","E","G","H","J","K","L","M","N","P","R","S","T","V","X","Y"),
"Province"=c("NL","NS","PE","NB","QC","QC","QC","ON","ON","ON","ON","ON","MB","SK","AB","BC","NU/NT","YT"))
firstCharPostCod <- substr(modelingData[,4],1,1)  ##Sélection du 1er caractère code postal
Province <- Prov[match(firstCharPostCod,Prov[,1]),2] #Sélection de la province en fonction du 1er caractère
modelingDataModif <- cbind(modelingData,Province)
secCharPostCod <- ifelse(as.numeric(substr(modelingData[,4],2,2)) == 0, "R","U")
modelingDataModif <- cbind(modelingDataModif,secCharPostCod)
Age_debut_inval <- modelingData[,1]-modelingData[,6]
modelingDataModif <- cbind(modelingDataModif,Age_debut_inval)
seasonTable <- data.frame("Numero mois"=c(1:12),"Saison"=c(rep.int("Hiver",3),rep.int("Printemps",3),rep.int("Ete",3),rep.int("Automne",3)))
Saison_debut_inval <- seasonTable[match(modelingData[,2],seasonTable[,1]),2]
modelingDataModif <- cbind(modelingDataModif,Saison_debut_inval)
for (i in 1:length(modelingData[,3])) {
{if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else if(modelingData[i,3]>=150){
delai[i] <- "Grand"
}
else delai[i] <- "Moyen"
}
}
delai <- c()
for (i in 1:length(modelingData[,3])) {
{if(modelingData[i,3]<75){
delai[i] <- "Petit"
}
else if(modelingData[i,3]>=150){
delai[i] <- "Grand"
}
else delai[i] <- "Moyen"
}
}
delai
View(modelingDataModif)
View(modelingDataModif)
modelingDataModif <- cbind(modelingData,delai)
modelingDataModif <- cbind(modelingDataModif,delai)
delai <- c()
for (i in 1:length(modelingDataModif[,3])) {
{if(modelingDataModif[i,3]<75){
delai[i] <- "Petit"
}
else if(modelingDataModif[i,3]>=150){
delai[i] <- "Grand"
}
else delai[i] <- "Moyen"
}
}
delai
modelingDataModif <- cbind(modelingDataModif,delai)
length(delai)
View(modelingDataModif)
modelingData <- read.csv("MODELING_DATA.csv", header = TRUE, sep =";")
modelingDataModif <- modelingData[complete.cases(modelingData),] # Élimination des lignes vides
modelingDataModif <- cbind(modelingDataModif,Province)
firstCharPostCod <- substr(modelingDataModif[,4],1,1)  ##Sélection du 1er caractère code postal
Province <- Prov[match(firstCharPostCod,Prov[,1]),2] #Sélection de la province en fonction du 1er caractère
modelingDataModif <- cbind(modelingDataModif,Province)
secCharPostCod <- ifelse(as.numeric(substr(modelingDataModif[,4],2,2)) == 0, "R","U")
modelingDataModif <- cbind(modelingDataModif,secCharPostCod)
Age_debut_inval <- modelingDataModif[,1]-modelingData[,6]
modelingDataModif <- cbind(modelingDataModif,Age_debut_inval)
Age_debut_inval <- modelingDataModif[,1]-modelingDataModif[,6]
modelingDataModif <- cbind(modelingDataModif,Age_debut_inval)
Saison_debut_inval <- seasonTable[match(modelingDataModif[,2],seasonTable[,1]),2]
modelingDataModif <- cbind(modelingDataModif,Saison_debut_inval)
delai <- c()
for (i in 1:length(modelingDataModif[,3])) {
{if(modelingDataModif[i,3]<75){
delai[i] <- "Petit"
}
else if(modelingDataModif[i,3]>=150){
delai[i] <- "Grand"
}
else delai[i] <- "Moyen"
}
}
length(delai)
modelingDataModif <- cbind(modelingDataModif,delai)
View(modelingDataModif)
View(modelingDataModif)
### Travail pratique
## Modèles linéaires ACT-2003
## Équipe 14
## Olivier Bourret
## Félix Laflamme
## William Perron
## Simon Veilleux
# Importation des données(Ne pas oubler de set le working directionary)
modelingData <- read.csv("MODELING_DATA.csv", header = TRUE, sep =";")
modelingDataModif <- modelingData[complete.cases(modelingData),] # Élimination des lignes vides
# Ajout de l'information Province à modelingData
Prov <- data.frame("1er Charactère"=c("A","B","C","E","G","H","J","K","L","M","N","P","R","S","T","V","X","Y"),
"Province"=c("NL","NS","PE","NB","QC","QC","QC","ON","ON","ON","ON","ON","MB","SK","AB","BC","NU/NT","YT"))
firstCharPostCod <- substr(modelingDataModif[,4],1,1)  ##Sélection du 1er caractère code postal
Province <- Prov[match(firstCharPostCod,Prov[,1]),2] #Sélection de la province en fonction du 1er caractère
modelingDataModif <- cbind(modelingDataModif,Province)
# Ajout de l'information territoire à modelingData (Urbain ou Rural)
secCharPostCod <- ifelse(as.numeric(substr(modelingDataModif[,4],2,2)) == 0, "R","U")
modelingDataModif <- cbind(modelingDataModif,secCharPostCod)
# Ajout de l'information âge à modelingData (en date de 2020)
Age_debut_inval <- modelingDataModif[,1]-modelingDataModif[,6]
modelingDataModif <- cbind(modelingDataModif,Age_debut_inval)
# Ajout de l'information saison de l'invalidité à modelingData
seasonTable <- data.frame("Numero mois"=c(1:12),"Saison"=c(rep.int("Hiver",3),rep.int("Printemps",3),rep.int("Ete",3),rep.int("Automne",3)))
Saison_debut_inval <- seasonTable[match(modelingDataModif[,2],seasonTable[,1]),2]
modelingDataModif <- cbind(modelingDataModif,Saison_debut_inval)
# Ajout de l'information Groupe du délai d'attente à modelingData
Delai_attente_Group <- c()
for (i in 1:length(modelingDataModif[,3])) {
{if(modelingDataModif[i,3]<75){
Delai_attente_Group[i] <- "Petit"
}
else if(modelingDataModif[i,3]>=150){
Delai_attente_Group[i] <- "Grand"
}
else Delai_attente_Group[i] <- "Moyen"
}
}
modelingDataModif <- cbind(modelingDataModif,Delai_attente_Group)
View(modelingDataModif)
View(modelingDataModif)
