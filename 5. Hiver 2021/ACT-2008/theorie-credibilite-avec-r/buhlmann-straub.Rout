
R version 4.0.0 (2020-04-24) -- "Arbor Day"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R est un logiciel libre livré sans AUCUNE GARANTIE.
Vous pouvez le redistribuer sous certaines conditions.
Tapez 'license()' ou 'licence()' pour plus de détails.

R est un projet collaboratif avec de nombreux contributeurs.
Tapez 'contributors()' pour plus d'information et
'citation()' pour la façon de le citer dans les publications.

Tapez 'demo()' pour des démonstrations, 'help()' pour l'aide
en ligne ou 'help.start()' pour obtenir l'aide au format HTML.
Tapez 'q()' pour quitter R.

[Sauvegarde de la session précédente restaurée]

> options(error=expression(NULL))
> ## Copyright (C) 2020 Vincent Goulet
> ##
> ## Ce fichier fait partie du projet
> ## «Théorie de la crédibilité avec R»
> ## https://gitlab.com/vigou3/theorie-credibilite-avec-r
> ##
> ## Cette création est mise à disposition sous licence
> ## Attribution-Partage dans les mêmes conditions 4.0
> ## International de Creative Commons.
> ## https://creativecommons.org/licenses/by-sa/4.0/
> 
> ## Charger le package actuar dans la session de travail.
> library(actuar)

Attachement du package : ‘actuar’

The following object is masked from ‘package:grDevices’:

    cm

> 
> ## Les données de Hachemeister (1975) sont fournies avec le
> ## paquetage actuar sous forme d'une matrice de 5 lignes et de
> ## 25 colonnes. La première colonne contient un identifiant
> ## d'État, les colonnes 2-13 les montants de sinistres moyens
> ## et les colonnes 14-25, les nombres de sinistres.
> hachemeister
     state ratio.1 ratio.2 ratio.3 ratio.4 ratio.5 ratio.6 ratio.7 ratio.8
[1,]     1    1738    1642    1794    2051    2079    2234    2032    2035
[2,]     2    1364    1408    1597    1444    1342    1675    1470    1448
[3,]     3    1759    1685    1479    1763    1674    2103    1502    1622
[4,]     4    1223    1146    1010    1257    1426    1532    1953    1123
[5,]     5    1456    1499    1609    1741    1482    1572    1606    1735
     ratio.9 ratio.10 ratio.11 ratio.12 weight.1 weight.2 weight.3 weight.4
[1,]    2115     2262     2267     2517     7861     9251     8706     8575
[2,]    1464     1831     1612     1471     1622     1742     1523     1515
[3,]    1828     2155     2233     2059     1147     1357     1329     1204
[4,]    1343     1243     1762     1306      407      396      348      341
[5,]    1607     1573     1613     1690     2902     3172     3046     3068
     weight.5 weight.6 weight.7 weight.8 weight.9 weight.10 weight.11 weight.12
[1,]     7917     8263     9456     8003     7365      7832      7849      9077
[2,]     1622     1602     1964     1515     1527      1748      1654      1861
[3,]      998     1077     1277     1218      896      1003      1108      1121
[4,]      315      328      352      331      287       384       321       342
[5,]     2693     2910     3275     2697     2663      3017      3242      3425
> 
> ## Dès lors qu'un jeu de données comporte des colonnes autres
> ## que l'identifiant du contrat et les données de sinistres,
> ## il faut avoir recours aux arguments suivants de 'cm'.
> ##
> ## ratios: expression indiquant les colonnes dans lesquelles
> ##  se trouvent les données de sinistres;
> ## weights: expression indiquant les colonnes dans lesquelles
> ##  se trouvent les poids associés aux données de sinistres.
> ##
> ## Ces deux arguments sont utilisés comme l'argument 'select'
> ## de la fonction 'subset'. Cela permet d'indicer de manière
> ## très intuitive les colonnes du jeu de données.
> ##
> ## Par exemple, l'expression ci-dessous permet d'extraire les
> ## ratios des cinq premières années des données de
> ## Hachemeister.
> subset(hachemeister, select = ratio.1:ratio.5)
     ratio.1 ratio.2 ratio.3 ratio.4 ratio.5
[1,]    1738    1642    1794    2051    2079
[2,]    1364    1408    1597    1444    1342
[3,]    1759    1685    1479    1763    1674
[4,]    1223    1146    1010    1257    1426
[5,]    1456    1499    1609    1741    1482
> 
> ## Ajustement du modèle de Bühlmann aux données de
> ## Hachemeister (sans tenir compte des volumes).
> fit.B <- cm(~state, hachemeister,
+             ratios = ratio.1:ratio.12)
> summary(fit.B)
Call:
cm(formula = ~state, data = hachemeister, ratios = ratio.1:ratio.12)

Structure Parameters Estimators

  Collective premium: 1671.017 

  Between state variance: 72310.02 
  Within state variance: 46040.47 

Detailed premiums

    state Indiv. mean Weight Cred. factor Cred. premium
    1     2063.833    12     0.9496143    2044.041     
    2     1510.500    12     0.9496143    1518.588     
    3     1821.833    12     0.9496143    1814.234     
    4     1360.333    12     0.9496143    1375.987     
    5     1598.583    12     0.9496143    1602.233     

> 
> ## L'argument 'method' de 'cm' permet de choisir l'estimateur
> ## de la variance inter. Trois choix sont disponibles.
> ##
> ## "Buhlmann-Gisler": notre estimateur sans biais;
> ## "Ohlsson": équivalent à "Buhlmann-Gisler" dans le modèle de
> ##   Buhlmann-Straub;
> ## "iterative": pseudo-estimateur de Bichsel-Straub.
> ##
> ## La vignette "credibility" du paquetage contient tous les
> ## détails sur les méthodes d'estimation de la variance inter.
> vignette("credibility")
> 
> ## Ajustement du modèle de Bühlmann-Straub avec l'estimateur
> ## sans biais de la variance inter (la méthode par défaut,
> ## donc non spécifiée ici). Il faut spécifier des poids.
> fit.BS1 <- cm(~state, hachemeister,
+              ratios = ratio.1:ratio.12,
+              weights = weight.1:weight.12)
> summary(fit.BS1)
Call:
cm(formula = ~state, data = hachemeister, ratios = ratio.1:ratio.12, 
    weights = weight.1:weight.12)

Structure Parameters Estimators

  Collective premium: 1683.713 

  Between state variance: 89638.73 
  Within state variance: 139120026 

Detailed premiums

    state Indiv. mean Weight Cred. factor Cred. premium
    1     2060.921    100155 0.9847404    2055.165     
    2     1511.224     19895 0.9276352    1523.706     
    3     1805.843     13735 0.8984754    1793.444     
    4     1352.976      4152 0.7279092    1442.967     
    5     1599.829     36110 0.9587911    1603.285     

> 
> ## Même chose, mais avec le pseudo-estimateur de la variance
> ## inter.
> fit.BS2 <- cm(~state, hachemeister,
+              ratios = ratio.1:ratio.12,
+              weights = weight.1:weight.12,
+              method = "iterative")
> summary(fit.BS2)
Call:
cm(formula = ~state, data = hachemeister, ratios = ratio.1:ratio.12, 
    weights = weight.1:weight.12, method = "iterative")

Structure Parameters Estimators

  Collective premium: 1688.895 

  Between state variance: 64366.51 
  Within state variance: 139120026 

Detailed premiums

    state Indiv. mean Weight Cred. factor Cred. premium
    1     2060.921    100155 0.9788756    2053.063     
    2     1511.224     19895 0.9020069    1528.635     
    3     1805.843     13735 0.8640336    1789.942     
    4     1352.976      4152 0.6576516    1467.977     
    5     1599.829     36110 0.9435251    1604.859     

> 
